{"id":"node_modules/@ew-did-registry/claims/dist/interface.js","dependencies":[{"name":"C:\\Users\\Ilya\\Documents\\Jaar3Informatica\\Bachelorproef\\DID testing\\node_modules\\@ew-did-registry\\claims\\dist\\interface.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Ilya\\Documents\\Jaar3Informatica\\Bachelorproef\\DID testing\\node_modules\\@ew-did-registry\\claims\\src\\interface.ts","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Ilya\\Documents\\Jaar3Informatica\\Bachelorproef\\DID testing\\package.json","includedInParent":true,"mtime":1643668307056},{"name":"C:\\Users\\Ilya\\Documents\\Jaar3Informatica\\Bachelorproef\\DID testing\\node_modules\\@ew-did-registry\\claims\\package.json","includedInParent":true,"mtime":1642815195336}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n"},"sourceMaps":{"js":{"version":3,"file":"interface.js","sourceRoot":"","sources":["../src/interface.ts"],"names":[],"mappings":"","sourcesContent":["import { IClaims, IProofData, IPublicClaim, ISaltedFields, } from './models';\n\n/**\n * IClaims interface is a factory to create Public, Private, and Proof Claims\n */\nexport interface IClaimsFactory {\n  createClaimsUser(): IClaimsUser;\n  createClaimsIssuer(): IClaimsIssuer;\n  createClaimsVerifier(): IClaimsVerifier;\n}\n\nexport interface IClaimsUser extends IClaims {\n  createPublicClaim(publicData: object): Promise<string>;\n  createPrivateClaim(privateData: { [key: string]: string }, issuer: string):\n    Promise<{ token: string; saltedFields: { [key: string]: string } }>;\n  createProofClaim(claimUrl: string, saltedFields: IProofData): Promise<string>;\n  verifyPublicClaim(token: string, verifyData: object): Promise<boolean>;\n  verifyPrivateClaim(privateToken: string, saltedFields: ISaltedFields): Promise<boolean>;\n  publishPublicClaim(issued: string, verifyData: object, opts?: { hashAlg: string; createHash: (data: string) => string }): Promise<string>;\n  publishPrivateClaim(issued: string, saltedFields: ISaltedFields, opts?: { hashAlg: string; createHash: (data: string) => string }): Promise<string>;\n}\n\nexport interface IClaimsIssuer extends IClaims {\n  issuePublicClaim(token: string | IPublicClaim): Promise<string>;\n  issuePrivateClaim(token: string): Promise<string>;\n}\n\nexport interface IClaimsVerifier extends IClaims {\n  verifyPublicProof(claimUrl: string): Promise<IPublicClaim>;\n  verifyPrivateProof(proofToken: string): Promise<void>;\n}\n"]}},"error":null,"hash":"7d38c979f9c4a08c527eb72fe4939cad","cacheData":{"env":{}}}