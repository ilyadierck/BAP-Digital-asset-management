{"id":"node_modules/ipfs-http-client/node_modules/ipfs-utils/src/files/url-source.js","dependencies":[{"name":"C:\\Users\\Ilya\\Documents\\Jaar3Informatica\\Bachelorproef\\DID testing\\package.json","includedInParent":true,"mtime":1642859135078},{"name":"C:\\Users\\Ilya\\Documents\\Jaar3Informatica\\Bachelorproef\\DID testing\\node_modules\\ipfs-http-client\\node_modules\\ipfs-utils\\package.json","includedInParent":true,"mtime":1643664308288},{"name":"../http","loc":{"line":3,"column":21},"parent":"C:\\Users\\Ilya\\Documents\\Jaar3Informatica\\Bachelorproef\\DID testing\\node_modules\\ipfs-http-client\\node_modules\\ipfs-utils\\src\\files\\url-source.js","resolved":"C:\\Users\\Ilya\\Documents\\Jaar3Informatica\\Bachelorproef\\DID testing\\node_modules\\ipfs-http-client\\node_modules\\ipfs-utils\\src\\http.js"}],"generated":{"js":"'use strict'\n\nconst Http = require('../http')\n\nmodule.exports = async function * urlSource (url, options) {\n  options = options || {}\n  const http = new Http()\n\n  yield {\n    path: decodeURIComponent(new URL(url).pathname.split('/').pop() || ''),\n    content: await http.iterator(url, { method: 'get' })\n  }\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/ipfs-http-client/node_modules/ipfs-utils/src/files/url-source.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/ipfs-http-client/node_modules/ipfs-utils/src/files/url-source.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/ipfs-http-client/node_modules/ipfs-utils/src/files/url-source.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/ipfs-http-client/node_modules/ipfs-utils/src/files/url-source.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/ipfs-http-client/node_modules/ipfs-utils/src/files/url-source.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/ipfs-http-client/node_modules/ipfs-utils/src/files/url-source.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/ipfs-http-client/node_modules/ipfs-utils/src/files/url-source.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/ipfs-http-client/node_modules/ipfs-utils/src/files/url-source.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/ipfs-http-client/node_modules/ipfs-utils/src/files/url-source.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/ipfs-http-client/node_modules/ipfs-utils/src/files/url-source.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/ipfs-http-client/node_modules/ipfs-utils/src/files/url-source.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/ipfs-http-client/node_modules/ipfs-utils/src/files/url-source.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/ipfs-http-client/node_modules/ipfs-utils/src/files/url-source.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/ipfs-http-client/node_modules/ipfs-utils/src/files/url-source.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}}],"sources":{"node_modules/ipfs-http-client/node_modules/ipfs-utils/src/files/url-source.js":"'use strict'\n\nconst Http = require('../http')\n\nmodule.exports = async function * urlSource (url, options) {\n  options = options || {}\n  const http = new Http()\n\n  yield {\n    path: decodeURIComponent(new URL(url).pathname.split('/').pop() || ''),\n    content: await http.iterator(url, { method: 'get' })\n  }\n}\n"},"lineCount":14}},"error":null,"hash":"55f9e920878000a4c9c035b55933f4de","cacheData":{"env":{}}}