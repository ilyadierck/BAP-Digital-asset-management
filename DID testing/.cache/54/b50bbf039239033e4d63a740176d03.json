{"id":"node_modules/@ew-did-registry/did-document/dist/lite/index.js","dependencies":[{"name":"C:\\Users\\Ilya\\Documents\\Jaar3Informatica\\Bachelorproef\\DID testing\\node_modules\\@ew-did-registry\\did-document\\dist\\lite\\index.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Ilya\\Documents\\Jaar3Informatica\\Bachelorproef\\DID testing\\node_modules\\@ew-did-registry\\did-document\\src\\lite\\index.ts","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Ilya\\Documents\\Jaar3Informatica\\Bachelorproef\\DID testing\\package.json","includedInParent":true,"mtime":1643668307056},{"name":"C:\\Users\\Ilya\\Documents\\Jaar3Informatica\\Bachelorproef\\DID testing\\node_modules\\@ew-did-registry\\did-document\\package.json","includedInParent":true,"mtime":1642814787148},{"name":"@ew-did-registry/did-ethr-resolver","loc":{"line":13,"column":36},"parent":"C:\\Users\\Ilya\\Documents\\Jaar3Informatica\\Bachelorproef\\DID testing\\node_modules\\@ew-did-registry\\did-document\\dist\\lite\\index.js","resolved":"C:\\Users\\Ilya\\Documents\\Jaar3Informatica\\Bachelorproef\\DID testing\\node_modules\\@ew-did-registry\\did-ethr-resolver\\dist\\index.js"}],"generated":{"js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DIDDocumentLite = void 0;\nconst did_ethr_resolver_1 = require(\"@ew-did-registry/did-ethr-resolver\");\nclass DIDDocumentLite {\n    /**\n  * @param {string} did - entity identifier, which is associated with DID Document\n  * @param {IResolver} resolver - resolver exposing read functionality of DID Document\n  */\n    // eslint-disable-next-line no-useless-constructor\n    constructor(did, resolver) {\n        this.did = did;\n        this.resolver = resolver;\n    }\n    /**\n     * Returns the current owner for certain DID.\n     * If owner not assigned explicitly than identity is the owner of itself\n     *\n     * @param {string} did\n     * @returns {Promise<string>}\n     */\n    getController(did = this.did) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.resolver.identityOwner(did);\n        });\n    }\n    /**\n     * Checks if the delegate is present for a particular DID.\n     *\n     * @param {DelegateTypes} delegateType\n     * @param {string} delegateDID\n     * @param {string} did\n     * @returns {Promise<boolean>}\n     */\n    isValidDelegate(delegateType, delegateDID, did = this.did) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.resolver.validDelegate(did, delegateType, delegateDID);\n        });\n    }\n    /**\n     * Finds first attribute which satisfies filter\n     *\n     * @param selector {{ [attr: string]: { [prop: string]: string } }} object used\n     *  to describe part of the document. `attr` is one of standard DID attributes\n     *  like `publicKey`, `serviceEndpoints` or `authentication` and `prop` - properties\n     *  of this attribute such as `type` or `value`\n     * @param did {string}\n     *\n     * @returns {object | null}\n     */\n    readAttribute(selector, did = this.did) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.resolver.readAttribute(did, selector);\n        });\n    }\n    /**\n     * Returns document of the given `did`\n     *\n     * @param did {string}\n     */\n    read(did = this.did) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.resolver.read(did);\n        });\n    }\n    ownerPubKey(did = this.did) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.resolver.readOwnerPubKey(did);\n        });\n    }\n    lastBlock(did) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.resolver.lastBlock(did);\n        });\n    }\n    readFromBlock(did, from) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.resolver.readFromBlock(did, from);\n        });\n    }\n    fromLogs(logs, did = this.did) {\n        return did_ethr_resolver_1.documentFromLogs(did, logs);\n    }\n}\nexports.DIDDocumentLite = DIDDocumentLite;\n"},"sourceMaps":{"js":{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/lite/index.ts"],"names":[],"mappings":";;;;;;;;;;;;AAWA,0EAAsE;AAItE,MAAM,eAAe;IACnB;;;IAGA;IACA,kDAAkD;IAClD,YAAmB,GAAW,EAAU,QAAmB;QAAxC,QAAG,GAAH,GAAG,CAAQ;QAAU,aAAQ,GAAR,QAAQ,CAAW;IAAI,CAAC;IAEhE;;;;;;OAMG;IACG,aAAa,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG;;YAChC,OAAO,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QAC1C,CAAC;KAAA;IAED;;;;;;;OAOG;IACG,eAAe,CACnB,YAA2B,EAAE,WAAmB,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG;;YAEhE,OAAO,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,EAAE,YAAY,EAAE,WAAW,CAAC,CAAC;QACrE,CAAC;KAAA;IAED;;;;;;;;;;OAUG;IACG,aAAa,CACjB,QAA0B,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG;;YAE1C,OAAO,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;QACpD,CAAC;KAAA;IAED;;;;OAIG;IACG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG;;YACvB,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACjC,CAAC;KAAA;IAEK,WAAW,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG;;YAC9B,OAAO,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;QAC5C,CAAC;KAAA;IAEK,SAAS,CAAC,GAAW;;YACzB,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACtC,CAAC;KAAA;IAEK,aAAa,CAAC,GAAW,EAAE,IAAe;;YAC9C,OAAO,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QAChD,CAAC;KAAA;IAED,QAAQ,CAAC,IAAmB,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG;QAC1C,OAAO,oCAAgB,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IACrC,CAAC;CACF;AAE0B,0CAAe","sourcesContent":["import { BigNumber } from 'ethers';\nimport {\n  IDIDDocument,\n  IResolver,\n  DelegateTypes,\n  IPublicKey,\n  IServiceEndpoint,\n  IAuthentication,\n  DocumentSelector,\n  IDIDLogData,\n} from '@ew-did-registry/did-resolver-interface';\nimport { documentFromLogs } from '@ew-did-registry/did-ethr-resolver';\n\nimport { IDIDDocumentLite } from './interface';\n\nclass DIDDocumentLite implements IDIDDocumentLite {\n  /**\n* @param {string} did - entity identifier, which is associated with DID Document\n* @param {IResolver} resolver - resolver exposing read functionality of DID Document\n*/\n  // eslint-disable-next-line no-useless-constructor\n  constructor(public did: string, private resolver: IResolver) { }\n\n  /**\n   * Returns the current owner for certain DID.\n   * If owner not assigned explicitly than identity is the owner of itself\n   *\n   * @param {string} did\n   * @returns {Promise<string>}\n   */\n  async getController(did = this.did): Promise<string> {\n    return this.resolver.identityOwner(did);\n  }\n\n  /**\n   * Checks if the delegate is present for a particular DID.\n   *\n   * @param {DelegateTypes} delegateType\n   * @param {string} delegateDID\n   * @param {string} did\n   * @returns {Promise<boolean>}\n   */\n  async isValidDelegate(\n    delegateType: DelegateTypes, delegateDID: string, did = this.did,\n  ): Promise<boolean> {\n    return this.resolver.validDelegate(did, delegateType, delegateDID);\n  }\n\n  /**\n   * Finds first attribute which satisfies filter\n   *\n   * @param selector {{ [attr: string]: { [prop: string]: string } }} object used\n   *  to describe part of the document. `attr` is one of standard DID attributes\n   *  like `publicKey`, `serviceEndpoints` or `authentication` and `prop` - properties\n   *  of this attribute such as `type` or `value`\n   * @param did {string}\n   *\n   * @returns {object | null}\n   */\n  async readAttribute(\n    selector: DocumentSelector, did = this.did,\n  ): Promise<IPublicKey | IServiceEndpoint | IAuthentication | undefined> {\n    return this.resolver.readAttribute(did, selector);\n  }\n\n  /**\n   * Returns document of the given `did`\n   *\n   * @param did {string}\n   */\n  async read(did = this.did): Promise<IDIDDocument> {\n    return this.resolver.read(did);\n  }\n\n  async ownerPubKey(did = this.did): Promise<string | undefined> {\n    return this.resolver.readOwnerPubKey(did);\n  }\n\n  async lastBlock(did: string): Promise<BigNumber> {\n    return this.resolver.lastBlock(did);\n  }\n\n  async readFromBlock(did: string, from: BigNumber): Promise<IDIDLogData> {\n    return this.resolver.readFromBlock(did, from);\n  }\n\n  fromLogs(logs: IDIDLogData[], did = this.did): IDIDDocument {\n    return documentFromLogs(did, logs);\n  }\n}\n\nexport { IDIDDocumentLite, DIDDocumentLite };\n"]}},"error":null,"hash":"19b8b242f63fefd65be1583ddfdf57fa","cacheData":{"env":{}}}