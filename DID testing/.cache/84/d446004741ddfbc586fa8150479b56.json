{"id":"node_modules/ipfs-core-utils/src/files/normalise-input.js","dependencies":[{"name":"C:\\Users\\Ilya\\Documents\\Jaar3Informatica\\Bachelorproef\\DID testing\\package.json","includedInParent":true,"mtime":1643668307056},{"name":"C:\\Users\\Ilya\\Documents\\Jaar3Informatica\\Bachelorproef\\DID testing\\node_modules\\ipfs-core-utils\\package.json","includedInParent":true,"mtime":1642815160316},{"name":"err-code","loc":{"line":3,"column":24},"parent":"C:\\Users\\Ilya\\Documents\\Jaar3Informatica\\Bachelorproef\\DID testing\\node_modules\\ipfs-core-utils\\src\\files\\normalise-input.js","resolved":"C:\\Users\\Ilya\\Documents\\Jaar3Informatica\\Bachelorproef\\DID testing\\node_modules\\err-code\\index.js"},{"name":"buffer","loc":{"line":4,"column":27},"parent":"C:\\Users\\Ilya\\Documents\\Jaar3Informatica\\Bachelorproef\\DID testing\\node_modules\\ipfs-core-utils\\src\\files\\normalise-input.js","resolved":"C:\\Users\\Ilya\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\buffer\\index.js"},{"name":"ipfs-utils/src/globalthis","loc":{"line":5,"column":27},"parent":"C:\\Users\\Ilya\\Documents\\Jaar3Informatica\\Bachelorproef\\DID testing\\node_modules\\ipfs-core-utils\\src\\files\\normalise-input.js","resolved":"C:\\Users\\Ilya\\Documents\\Jaar3Informatica\\Bachelorproef\\DID testing\\node_modules\\ipfs-utils\\src\\globalthis.js"}],"generated":{"js":"\n'use strict'\n\nconst errCode = require('err-code')\nconst { Buffer } = require('buffer')\nconst globalThis = require('ipfs-utils/src/globalthis')\n\n/*\n * Transform one of:\n *\n * ```\n * Bytes (Buffer|ArrayBuffer|TypedArray) [single file]\n * Bloby (Blob|File) [single file]\n * String [single file]\n * { path, content: Bytes } [single file]\n * { path, content: Bloby } [single file]\n * { path, content: String } [single file]\n * { path, content: Iterable<Number> } [single file]\n * { path, content: Iterable<Bytes> } [single file]\n * { path, content: AsyncIterable<Bytes> } [single file]\n * Iterable<Number> [single file]\n * Iterable<Bytes> [single file]\n * Iterable<Bloby> [multiple files]\n * Iterable<String> [multiple files]\n * Iterable<{ path, content: Bytes }> [multiple files]\n * Iterable<{ path, content: Bloby }> [multiple files]\n * Iterable<{ path, content: String }> [multiple files]\n * Iterable<{ path, content: Iterable<Number> }> [multiple files]\n * Iterable<{ path, content: Iterable<Bytes> }> [multiple files]\n * Iterable<{ path, content: AsyncIterable<Bytes> }> [multiple files]\n * AsyncIterable<Bytes> [single file]\n * AsyncIterable<Bloby> [multiple files]\n * AsyncIterable<String> [multiple files]\n * AsyncIterable<{ path, content: Bytes }> [multiple files]\n * AsyncIterable<{ path, content: Bloby }> [multiple files]\n * AsyncIterable<{ path, content: String }> [multiple files]\n * AsyncIterable<{ path, content: Iterable<Number> }> [multiple files]\n * AsyncIterable<{ path, content: Iterable<Bytes> }> [multiple files]\n * AsyncIterable<{ path, content: AsyncIterable<Bytes> }> [multiple files]\n * ```\n * Into:\n *\n * ```\n * AsyncIterable<{ path, content: AsyncIterable<Buffer> }>\n * ```\n *\n * @param input Object\n * @return AsyncInterable<{ path, content: AsyncIterable<Buffer> }>\n */\nmodule.exports = function normaliseInput (input) {\n  // must give us something\n  if (input === null || input === undefined) {\n    throw errCode(new Error(`Unexpected input: ${input}`, 'ERR_UNEXPECTED_INPUT'))\n  }\n\n  // String\n  if (typeof input === 'string' || input instanceof String) {\n    return (async function * () { // eslint-disable-line require-await\n      yield toFileObject(input)\n    })()\n  }\n\n  // Buffer|ArrayBuffer|TypedArray\n  // Blob|File\n  if (isBytes(input) || isBloby(input)) {\n    return (async function * () { // eslint-disable-line require-await\n      yield toFileObject(input)\n    })()\n  }\n\n  // Iterable<?>\n  if (input[Symbol.iterator]) {\n    return (async function * () { // eslint-disable-line require-await\n      const iterator = input[Symbol.iterator]()\n      const first = iterator.next()\n      if (first.done) return iterator\n\n      // Iterable<Number>\n      // Iterable<Bytes>\n      if (Number.isInteger(first.value) || isBytes(first.value)) {\n        yield toFileObject((function * () {\n          yield first.value\n          yield * iterator\n        })())\n        return\n      }\n\n      // Iterable<Bloby>\n      // Iterable<String>\n      // Iterable<{ path, content }>\n      if (isFileObject(first.value) || isBloby(first.value) || typeof first.value === 'string') {\n        yield toFileObject(first.value)\n        for (const obj of iterator) {\n          yield toFileObject(obj)\n        }\n        return\n      }\n\n      throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\n    })()\n  }\n\n  // window.ReadableStream\n  if (typeof input.getReader === 'function') {\n    return (async function * () {\n      for await (const obj of browserStreamToIt(input)) {\n        yield toFileObject(obj)\n      }\n    })()\n  }\n\n  // AsyncIterable<?>\n  if (input[Symbol.asyncIterator]) {\n    return (async function * () {\n      const iterator = input[Symbol.asyncIterator]()\n      const first = await iterator.next()\n      if (first.done) return iterator\n\n      // AsyncIterable<Bytes>\n      if (isBytes(first.value)) {\n        yield toFileObject((async function * () { // eslint-disable-line require-await\n          yield first.value\n          yield * iterator\n        })())\n        return\n      }\n\n      // AsyncIterable<Bloby>\n      // AsyncIterable<String>\n      // AsyncIterable<{ path, content }>\n      if (isFileObject(first.value) || isBloby(first.value) || typeof first.value === 'string') {\n        yield toFileObject(first.value)\n        for await (const obj of iterator) {\n          yield toFileObject(obj)\n        }\n        return\n      }\n\n      throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\n    })()\n  }\n\n  // { path, content: ? }\n  // Note: Detected _after_ AsyncIterable<?> because Node.js streams have a\n  // `path` property that passes this check.\n  if (isFileObject(input)) {\n    return (async function * () { // eslint-disable-line require-await\n      yield toFileObject(input)\n    })()\n  }\n\n  throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\n}\n\nfunction toFileObject (input) {\n  const obj = {\n    path: input.path || '',\n    mode: input.mode,\n    mtime: input.mtime\n  }\n\n  if (input.content) {\n    obj.content = toAsyncIterable(input.content)\n  } else if (!input.path) { // Not already a file object with path or content prop\n    obj.content = toAsyncIterable(input)\n  }\n\n  return obj\n}\n\nfunction toAsyncIterable (input) {\n  // Bytes | String\n  if (isBytes(input) || typeof input === 'string') {\n    return (async function * () { // eslint-disable-line require-await\n      yield toBuffer(input)\n    })()\n  }\n\n  // Bloby\n  if (isBloby(input)) {\n    return blobToAsyncGenerator(input)\n  }\n\n  // Browser stream\n  if (typeof input.getReader === 'function') {\n    return browserStreamToIt(input)\n  }\n\n  // Iterator<?>\n  if (input[Symbol.iterator]) {\n    return (async function * () { // eslint-disable-line require-await\n      const iterator = input[Symbol.iterator]()\n      const first = iterator.next()\n      if (first.done) return iterator\n\n      // Iterable<Number>\n      if (Number.isInteger(first.value)) {\n        yield toBuffer(Array.from((function * () {\n          yield first.value\n          yield * iterator\n        })()))\n        return\n      }\n\n      // Iterable<Bytes>\n      if (isBytes(first.value)) {\n        yield toBuffer(first.value)\n        for (const chunk of iterator) {\n          yield toBuffer(chunk)\n        }\n        return\n      }\n\n      throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\n    })()\n  }\n\n  // AsyncIterable<Bytes>\n  if (input[Symbol.asyncIterator]) {\n    return (async function * () {\n      for await (const chunk of input) {\n        yield toBuffer(chunk)\n      }\n    })()\n  }\n\n  throw errCode(new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT')\n}\n\nfunction toBuffer (chunk) {\n  return isBytes(chunk) ? chunk : Buffer.from(chunk)\n}\n\nfunction isBytes (obj) {\n  return Buffer.isBuffer(obj) || ArrayBuffer.isView(obj) || obj instanceof ArrayBuffer\n}\n\nfunction isBloby (obj) {\n  return typeof globalThis.Blob !== 'undefined' && obj instanceof globalThis.Blob\n}\n\n// An object with a path or content property\nfunction isFileObject (obj) {\n  return typeof obj === 'object' && (obj.path || obj.content)\n}\n\nfunction blobToAsyncGenerator (blob) {\n  if (typeof blob.stream === 'function') {\n    // firefox < 69 does not support blob.stream()\n    return browserStreamToIt(blob.stream())\n  }\n\n  return readBlob(blob)\n}\n\nasync function * browserStreamToIt (stream) {\n  const reader = stream.getReader()\n\n  while (true) {\n    const result = await reader.read()\n\n    if (result.done) {\n      return\n    }\n\n    yield result.value\n  }\n}\n\nasync function * readBlob (blob, options) {\n  options = options || {}\n\n  const reader = new globalThis.FileReader()\n  const chunkSize = options.chunkSize || 1024 * 1024\n  let offset = options.offset || 0\n\n  const getNextChunk = () => new Promise((resolve, reject) => {\n    reader.onloadend = e => {\n      const data = e.target.result\n      resolve(data.byteLength === 0 ? null : data)\n    }\n    reader.onerror = reject\n\n    const end = offset + chunkSize\n    const slice = blob.slice(offset, end)\n    reader.readAsArrayBuffer(slice)\n    offset = end\n  })\n\n  while (true) {\n    const data = await getNextChunk()\n\n    if (data == null) {\n      return\n    }\n\n    yield Buffer.from(data)\n  }\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}}],"sources":{"node_modules/ipfs-core-utils/src/files/normalise-input.js":"'use strict'\n\nconst errCode = require('err-code')\nconst { Buffer } = require('buffer')\nconst globalThis = require('ipfs-utils/src/globalthis')\n\n/*\n * Transform one of:\n *\n * ```\n * Bytes (Buffer|ArrayBuffer|TypedArray) [single file]\n * Bloby (Blob|File) [single file]\n * String [single file]\n * { path, content: Bytes } [single file]\n * { path, content: Bloby } [single file]\n * { path, content: String } [single file]\n * { path, content: Iterable<Number> } [single file]\n * { path, content: Iterable<Bytes> } [single file]\n * { path, content: AsyncIterable<Bytes> } [single file]\n * Iterable<Number> [single file]\n * Iterable<Bytes> [single file]\n * Iterable<Bloby> [multiple files]\n * Iterable<String> [multiple files]\n * Iterable<{ path, content: Bytes }> [multiple files]\n * Iterable<{ path, content: Bloby }> [multiple files]\n * Iterable<{ path, content: String }> [multiple files]\n * Iterable<{ path, content: Iterable<Number> }> [multiple files]\n * Iterable<{ path, content: Iterable<Bytes> }> [multiple files]\n * Iterable<{ path, content: AsyncIterable<Bytes> }> [multiple files]\n * AsyncIterable<Bytes> [single file]\n * AsyncIterable<Bloby> [multiple files]\n * AsyncIterable<String> [multiple files]\n * AsyncIterable<{ path, content: Bytes }> [multiple files]\n * AsyncIterable<{ path, content: Bloby }> [multiple files]\n * AsyncIterable<{ path, content: String }> [multiple files]\n * AsyncIterable<{ path, content: Iterable<Number> }> [multiple files]\n * AsyncIterable<{ path, content: Iterable<Bytes> }> [multiple files]\n * AsyncIterable<{ path, content: AsyncIterable<Bytes> }> [multiple files]\n * ```\n * Into:\n *\n * ```\n * AsyncIterable<{ path, content: AsyncIterable<Buffer> }>\n * ```\n *\n * @param input Object\n * @return AsyncInterable<{ path, content: AsyncIterable<Buffer> }>\n */\nmodule.exports = function normaliseInput (input) {\n  // must give us something\n  if (input === null || input === undefined) {\n    throw errCode(new Error(`Unexpected input: ${input}`, 'ERR_UNEXPECTED_INPUT'))\n  }\n\n  // String\n  if (typeof input === 'string' || input instanceof String) {\n    return (async function * () { // eslint-disable-line require-await\n      yield toFileObject(input)\n    })()\n  }\n\n  // Buffer|ArrayBuffer|TypedArray\n  // Blob|File\n  if (isBytes(input) || isBloby(input)) {\n    return (async function * () { // eslint-disable-line require-await\n      yield toFileObject(input)\n    })()\n  }\n\n  // Iterable<?>\n  if (input[Symbol.iterator]) {\n    return (async function * () { // eslint-disable-line require-await\n      const iterator = input[Symbol.iterator]()\n      const first = iterator.next()\n      if (first.done) return iterator\n\n      // Iterable<Number>\n      // Iterable<Bytes>\n      if (Number.isInteger(first.value) || isBytes(first.value)) {\n        yield toFileObject((function * () {\n          yield first.value\n          yield * iterator\n        })())\n        return\n      }\n\n      // Iterable<Bloby>\n      // Iterable<String>\n      // Iterable<{ path, content }>\n      if (isFileObject(first.value) || isBloby(first.value) || typeof first.value === 'string') {\n        yield toFileObject(first.value)\n        for (const obj of iterator) {\n          yield toFileObject(obj)\n        }\n        return\n      }\n\n      throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\n    })()\n  }\n\n  // window.ReadableStream\n  if (typeof input.getReader === 'function') {\n    return (async function * () {\n      for await (const obj of browserStreamToIt(input)) {\n        yield toFileObject(obj)\n      }\n    })()\n  }\n\n  // AsyncIterable<?>\n  if (input[Symbol.asyncIterator]) {\n    return (async function * () {\n      const iterator = input[Symbol.asyncIterator]()\n      const first = await iterator.next()\n      if (first.done) return iterator\n\n      // AsyncIterable<Bytes>\n      if (isBytes(first.value)) {\n        yield toFileObject((async function * () { // eslint-disable-line require-await\n          yield first.value\n          yield * iterator\n        })())\n        return\n      }\n\n      // AsyncIterable<Bloby>\n      // AsyncIterable<String>\n      // AsyncIterable<{ path, content }>\n      if (isFileObject(first.value) || isBloby(first.value) || typeof first.value === 'string') {\n        yield toFileObject(first.value)\n        for await (const obj of iterator) {\n          yield toFileObject(obj)\n        }\n        return\n      }\n\n      throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\n    })()\n  }\n\n  // { path, content: ? }\n  // Note: Detected _after_ AsyncIterable<?> because Node.js streams have a\n  // `path` property that passes this check.\n  if (isFileObject(input)) {\n    return (async function * () { // eslint-disable-line require-await\n      yield toFileObject(input)\n    })()\n  }\n\n  throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\n}\n\nfunction toFileObject (input) {\n  const obj = {\n    path: input.path || '',\n    mode: input.mode,\n    mtime: input.mtime\n  }\n\n  if (input.content) {\n    obj.content = toAsyncIterable(input.content)\n  } else if (!input.path) { // Not already a file object with path or content prop\n    obj.content = toAsyncIterable(input)\n  }\n\n  return obj\n}\n\nfunction toAsyncIterable (input) {\n  // Bytes | String\n  if (isBytes(input) || typeof input === 'string') {\n    return (async function * () { // eslint-disable-line require-await\n      yield toBuffer(input)\n    })()\n  }\n\n  // Bloby\n  if (isBloby(input)) {\n    return blobToAsyncGenerator(input)\n  }\n\n  // Browser stream\n  if (typeof input.getReader === 'function') {\n    return browserStreamToIt(input)\n  }\n\n  // Iterator<?>\n  if (input[Symbol.iterator]) {\n    return (async function * () { // eslint-disable-line require-await\n      const iterator = input[Symbol.iterator]()\n      const first = iterator.next()\n      if (first.done) return iterator\n\n      // Iterable<Number>\n      if (Number.isInteger(first.value)) {\n        yield toBuffer(Array.from((function * () {\n          yield first.value\n          yield * iterator\n        })()))\n        return\n      }\n\n      // Iterable<Bytes>\n      if (isBytes(first.value)) {\n        yield toBuffer(first.value)\n        for (const chunk of iterator) {\n          yield toBuffer(chunk)\n        }\n        return\n      }\n\n      throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\n    })()\n  }\n\n  // AsyncIterable<Bytes>\n  if (input[Symbol.asyncIterator]) {\n    return (async function * () {\n      for await (const chunk of input) {\n        yield toBuffer(chunk)\n      }\n    })()\n  }\n\n  throw errCode(new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT')\n}\n\nfunction toBuffer (chunk) {\n  return isBytes(chunk) ? chunk : Buffer.from(chunk)\n}\n\nfunction isBytes (obj) {\n  return Buffer.isBuffer(obj) || ArrayBuffer.isView(obj) || obj instanceof ArrayBuffer\n}\n\nfunction isBloby (obj) {\n  return typeof globalThis.Blob !== 'undefined' && obj instanceof globalThis.Blob\n}\n\n// An object with a path or content property\nfunction isFileObject (obj) {\n  return typeof obj === 'object' && (obj.path || obj.content)\n}\n\nfunction blobToAsyncGenerator (blob) {\n  if (typeof blob.stream === 'function') {\n    // firefox < 69 does not support blob.stream()\n    return browserStreamToIt(blob.stream())\n  }\n\n  return readBlob(blob)\n}\n\nasync function * browserStreamToIt (stream) {\n  const reader = stream.getReader()\n\n  while (true) {\n    const result = await reader.read()\n\n    if (result.done) {\n      return\n    }\n\n    yield result.value\n  }\n}\n\nasync function * readBlob (blob, options) {\n  options = options || {}\n\n  const reader = new globalThis.FileReader()\n  const chunkSize = options.chunkSize || 1024 * 1024\n  let offset = options.offset || 0\n\n  const getNextChunk = () => new Promise((resolve, reject) => {\n    reader.onloadend = e => {\n      const data = e.target.result\n      resolve(data.byteLength === 0 ? null : data)\n    }\n    reader.onerror = reject\n\n    const end = offset + chunkSize\n    const slice = blob.slice(offset, end)\n    reader.readAsArrayBuffer(slice)\n    offset = end\n  })\n\n  while (true) {\n    const data = await getNextChunk()\n\n    if (data == null) {\n      return\n    }\n\n    yield Buffer.from(data)\n  }\n}\n"},"lineCount":300}},"error":null,"hash":"bb5b4c6aa1168a86524d6ca376c2c871","cacheData":{"env":{}}}